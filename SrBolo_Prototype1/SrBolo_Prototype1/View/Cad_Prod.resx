<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnPedidos.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>